name: Build Test and Artifact

on:
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]
  workflow_dispatch:
    inputs:
      perform_action:
        required: true
        type: choice
        options:
        - build
        - release
        default: build

jobs:
  build:
    name: Build & Unit-Test, Create Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ inputs.perform_action == 'release' || 'build' }}
    outputs:
      tag_name: ${{ steps.create_tag.outputs.tag_name }}

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Configure CMake Build
      run: cmake -B ${{github.workspace}}/build

    - name: Build HelloWorld App
      run: cmake --build ${{github.workspace}}/build

    - name: Run Unit-Test Gtest
      working-directory: ${{github.workspace}}/build/tst
      run: ./HelloWorldProject_tst

    - name: On success above, create Tag & use it in Docker Image and Release
      id: create_tag
      working-directory: ${{github.workspace}}
      run: |
          echo "tag_name=v1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: login to Docker Hub  
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}

    - name: Build Docker image and push to Docker Hub repository
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USER }}/kone-assignment-dockerrepo:${{ steps.create_tag.outputs.tag_name }}
          ${{ secrets.DOCKERHUB_USER }}/kone-assignment-dockerrepo:latest


  release:
    needs: build
    name: Release-Project
    runs-on: ubuntu-latest
    if: ${{ inputs.perform_action == 'release' }}

    steps:
    - name: Create Release notes from list of Git merge on Master
      id: create_release_notes
      working-directory: ${{github.workspace}}
      run: |
        git clone --filter=blob:none --no-checkout --single-branch --branch master $GITHUB_SERVER_URL/$GITHUB_REPOSITORY .
        git log master --first-parent --merges --pretty=format:"%h %<(10,trunc)%aN %C(white)%<(15)%ar%Creset %C(red bold)%<(15)%D%Creset %s" > ./release_notes.md
    
    - name: Create Release
      working-directory: ${{github.workspace}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ needs.build.outputs.tag_name }} --repo="$GITHUB_REPOSITORY" -F ./release_notes.md -t "Released"


